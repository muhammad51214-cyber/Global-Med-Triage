services:
  db:
    image: postgres:16
    container_name: triage_db
    environment:
      POSTGRES_USER: globalmed
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: triage
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql:ro
      - ./db/seed.sql:/docker-entrypoint-initdb.d/2-seed.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U globalmed"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: triage_backend
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  translation_service:
    build:
      context: ./backend/translation_service
      dockerfile: Dockerfile
    container_name: translation_service
    ports:
      - "8002:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  coral_medicaloffice:
    build:
      context: ./backend/coral_project/Coral-MedicalOfficeTriage-Agent
    container_name: coral_medicaloffice
    ports:
      - "8010:8010"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8010/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

volumes:
  db_data:
